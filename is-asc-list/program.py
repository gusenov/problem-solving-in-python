def is_list_ascending(lst):
    is_asc = True  # флаг возрастания списка.
    step = set()  # множество шагов.

    # Обход элементов списка начиная со второго:
    for idx in range(1, len(lst)):
        # Запоминаем разницу между текущим и предыдущим элементом:
        if len(step) < 2:  # достаточно будет двух разниц, чтобы понять, что список возрастает неравномерно.
            step.add(lst[idx] - lst[idx - 1])

        # Если элемент меньше предыдущего, то:
        if lst[idx] < lst[idx - 1]:
            is_asc = False  # список не возрастает.
            break  # выходим из цикла, дальше проверять нет смысла.

    if is_asc:
        # Если между элементами постоянно одна разница, то список возрастает с шагом:
        if len(step) == 1:
            print("Список возрастает с шагом {}".format(step.pop()))
        else:  # иначе список возрастает неравномерно.
            print("Список просто возрастает")
    else:
        print('Список не возрастает')


def main():
    is_list_ascending([1, 3, 5, 7, 9])
    is_list_ascending([1, 3, 5, 8, 11])
    is_list_ascending([1, 13, 5, 7, 9])


if __name__ == '__main__':
    main()
